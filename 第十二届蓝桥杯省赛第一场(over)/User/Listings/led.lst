C51 COMPILER V9.60.0.0   LED                                                               03/30/2023 22:01:30 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE ..\Driver\led.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver;..\Include;..\Use
                    -r) DEBUG OBJECTEXTEND PRINT(.\Listings\led.lst) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          #include "init.h"
   3          #include "onewire.h"
   4          
   5          extern unsigned char Set_Temp;
   6          extern unsigned int tempbuf;
   7          extern bit DA_Mode;
   8          extern unsigned char Display_Mode;
   9          extern float DA_Output;
  10          unsigned char code Led_Number[10] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
  11          unsigned char Led_Buff[8] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
  12          
  13          void Display()
  14          {
  15   1              static unsigned char i = 0;
  16   1              
  17   1              P0 = 0x00;
  18   1              SelectHC138(6);
  19   1              P0 = 0x01 << i;
  20   1              SelectHC138(0);
  21   1      
  22   1              P0 = 0xFF;
  23   1              SelectHC138(7);
  24   1              P0 = Led_Buff[i];
  25   1              SelectHC138(0);
  26   1              
  27   1              i++;
  28   1              i &= 0x07;
  29   1      }
  30          
  31          void DisplayMode_1()
  32          {
  33   1              Led_Buff[0] = 0xC6;
  34   1              Led_Buff[4] = Led_Number[tempbuf / 1000 % 10];
  35   1              Led_Buff[5] = Led_Number[tempbuf / 100 % 10] & 0x7F;
  36   1              Led_Buff[6] = Led_Number[tempbuf / 10 % 10];
  37   1              Led_Buff[7] = Led_Number[tempbuf % 10];
  38   1      }
  39          
  40          void DisplayMode_2()
  41          {
  42   1              Led_Buff[0] = 0x8C;
  43   1              Led_Buff[4] = 0xFF;
  44   1              Led_Buff[5] = 0xFF;
  45   1              Led_Buff[6] = Led_Number[Set_Temp / 10 % 10];
  46   1              Led_Buff[7] = Led_Number[Set_Temp % 10];
  47   1      }
  48          
  49          void DisplayMode_3()
  50          {       
  51   1              Led_Buff[0] = 0x88;
  52   1              Led_Buff[4] = 0xFF;
  53   1              Led_Buff[5] = Led_Number[(unsigned int)DA_Output / 100 % 10] & 0x7F;
  54   1              Led_Buff[6] = Led_Number[(unsigned int)DA_Output / 10 % 10];
C51 COMPILER V9.60.0.0   LED                                                               03/30/2023 22:01:30 PAGE 2   

  55   1              Led_Buff[7] = Led_Number[(unsigned int)DA_Output % 10];
  56   1      }
  57          
  58          void Led_Single()
  59          {
  60   1              P0 = 0xFF;
  61   1              if(DA_Mode == 0)
  62   1              {
  63   2                      SelectHC138(4);
  64   2                      P00 = 0;
  65   2                      SelectHC138(0);
  66   2              }
  67   1              else
  68   1              {
  69   2                      SelectHC138(4);
  70   2                      P00 = 1;
  71   2                      SelectHC138(0);
  72   2              }
  73   1              if(Display_Mode == 0)
  74   1              {
  75   2                      SelectHC138(4);
  76   2                      P01 = 0;
  77   2                      SelectHC138(0);
  78   2              }
  79   1              else
  80   1              {       
  81   2                      SelectHC138(4);
  82   2                      P01 = 1;
  83   2                      SelectHC138(0);
  84   2              }
  85   1              if(Display_Mode == 1)
  86   1              {
  87   2                      SelectHC138(4);
  88   2                      P02 = 0;
  89   2                      SelectHC138(0);
  90   2              }
  91   1              else
  92   1              {       
  93   2                      SelectHC138(4);
  94   2                      P02 = 1;
  95   2                      SelectHC138(0);
  96   2              }
  97   1              if(Display_Mode == 2)
  98   1              {
  99   2                      SelectHC138(4);
 100   2                      P03 = 0;
 101   2                      SelectHC138(0);
 102   2              }
 103   1              else
 104   1              {       
 105   2                      SelectHC138(4);
 106   2                      P03 = 1;
 107   2                      SelectHC138(0);
 108   2              }
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    436    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   LED                                                               03/30/2023 22:01:30 PAGE 3   

   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

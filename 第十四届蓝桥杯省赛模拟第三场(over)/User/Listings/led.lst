C51 COMPILER V9.60.0.0   LED                                                               04/07/2023 14:41:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE ..\Driver\led.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver;..\Include;..\Use
                    -r) DEBUG OBJECTEXTEND PRINT(.\Listings\led.lst) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          #include "init.h"
   3          #include "string.h"
   4          
   5          unsigned char code Led_Number[10] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
   6          unsigned char Led_Buff[8] = {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
   7          extern unsigned int Readtemp;
   8          extern unsigned int Display_Vep;
   9          extern bit DisplayMode;
  10          extern bit Enable;
  11          extern unsigned char index;
  12          extern unsigned char xdata Uart_Recv[20];
  13          
  14          void Display()
  15          {
  16   1              static unsigned char i = 0;
  17   1              
  18   1              SelectHC138(7);
  19   1              P0 = 0xFF;
  20   1              SelectHC138(0);
  21   1              
  22   1              P0 = 0x00;
  23   1              SelectHC138(6);
  24   1              P0 = 0x01 << i;
  25   1              SelectHC138(0);
  26   1              
  27   1              P0 = 0xFF;
  28   1              SelectHC138(7);
  29   1              P0 = Led_Buff[i];
  30   1              SelectHC138(0);
  31   1              
  32   1              i++;
  33   1              i &= 0x07;
  34   1      }
  35          
  36          void DisplayMode0()
  37          {
  38   1              Led_Buff[0] = 0xC1;
  39   1              Led_Buff[1] = Led_Number[1];
  40   1              
  41   1              Led_Buff[4] = 0xFF;
  42   1              Led_Buff[5] = Led_Number[Readtemp / 100 % 10];
  43   1              Led_Buff[6] = Led_Number[Readtemp / 10 % 10] & 0x7F;
  44   1              Led_Buff[7] = Led_Number[Readtemp % 10];
  45   1      }
  46          
  47          void DisplayMode1()
  48          {
  49   1              Led_Buff[0] = 0xC1;
  50   1              Led_Buff[1] = Led_Number[2];
  51   1              
  52   1              if((Display_Vep >= 1000) && (Display_Vep <= 9999))
  53   1              {
  54   2                      Led_Buff[4] = Led_Number[Display_Vep / 1000 % 10];
C51 COMPILER V9.60.0.0   LED                                                               04/07/2023 14:41:03 PAGE 2   

  55   2                      Led_Buff[5] = Led_Number[Display_Vep / 100 % 10] & 0x7F;
  56   2                      Led_Buff[6] = Led_Number[Display_Vep / 10 % 10];
  57   2                      Led_Buff[7] = Led_Number[Display_Vep % 10];
  58   2              }
  59   1              else if((Display_Vep >= 100) && (Display_Vep <= 999))
  60   1              {
  61   2                      Led_Buff[4] = 0xFF;
  62   2                      Led_Buff[5] = Led_Number[Display_Vep / 100 % 10] & 0x7F;
  63   2                      Led_Buff[6] = Led_Number[Display_Vep / 10 % 10];
  64   2                      Led_Buff[7] = Led_Number[Display_Vep % 10];
  65   2              }
  66   1      }
  67          
  68          void DisplayModeOFF()
  69          {
  70   1              Led_Buff[0] = 0xFF;
  71   1              Led_Buff[1] = 0xFF;
  72   1              Led_Buff[4] = 0xFF;
  73   1              Led_Buff[5] = 0xFF;
  74   1              Led_Buff[6] = 0xFF;
  75   1              Led_Buff[7] = 0xFF;
  76   1      }
  77          
  78          void Led_Single()
  79          {
  80   1              P0 = 0xFF;
  81   1              SelectHC138(4);
  82   1              if(Enable == 0)
  83   1              {
  84   2                      P00 = 0;
  85   2              }
  86   1              else
  87   1              {
  88   2                      P00 = 1;        
  89   2              }
  90   1              if(DisplayMode == 0)
  91   1              {
  92   2                      P01 = 0;
  93   2              }
  94   1              else
  95   1              {
  96   2                      P01 = 1;
  97   2              }
  98   1              if(DisplayMode == 1)
  99   1              {
 100   2                      P02 = 0;
 101   2              }
 102   1              else
 103   1              {
 104   2                      P02 = 1;        
 105   2              }
 106   1              if((Readtemp < 200) || (Readtemp > 260))
 107   1              {
 108   2                      P05 = 0;
 109   2              }
 110   1              else
 111   1              {
 112   2                      P05 = 1;
 113   2              }
 114   1              if(strcmp(Uart_Recv,"Open\r\n") == 0)
 115   1              {
 116   2                      P07 = 0;
C51 COMPILER V9.60.0.0   LED                                                               04/07/2023 14:41:03 PAGE 3   

 117   2                      index = 0;
 118   2              }
 119   1              else
 120   1              {
 121   2                      P07 = 1;
 122   2              }
 123   1              SelectHC138(0);
 124   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    473    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
